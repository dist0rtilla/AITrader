server {
  listen 80;
  server_name _;

  root /usr/share/nginx/html;
  index index.html;

  location / {
    try_files $uri $uri/ /index.html;
  }

  # Serve built assets referenced under /ui/ (some builds reference /ui/* paths)
  location /ui/ {
    alias /usr/share/nginx/html/;
    try_files $uri $uri/ /ui/index.html;
  }

  # Map a simple /api/status to the settings service /health endpoint
  location = /api/status {
    proxy_pass http://settings-api:8000/health;
  }

  # Route WebSocket monitor endpoint to backend-main which hosts the WS broadcaster
  location = /api/ws/monitor {
    proxy_pass http://settings-api:8000/ws/monitor;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Origin $http_origin;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 86400;
  }

  # Proxy all other /api/ requests to the settings API.
  # Enable websocket proxying and proper headers so frontend WS upgrades succeed.
  location /api/ {
    proxy_pass http://settings-api:8000/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Origin $http_origin;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 86400;
  }
}
