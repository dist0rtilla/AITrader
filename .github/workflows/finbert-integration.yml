name: FinBERT Integration Tests (heavy)

on:
  workflow_dispatch: {}
  schedule:
    # Weekly run (UTC) to catch regressions and warm caches
    - cron: '0 3 * * 0'
  pull_request:
    types: [labeled]

jobs:
  run-integration:
    name: Run integration tests (loads real model)
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'schedule') ||
      (github.event_name == 'pull_request' && github.event.label.name == 'run-integration-tests')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Post start comment (PR only)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            if (!pr) return;
            const body = `üîÑ Integration tests started by @${context.actor} ‚Äî this may take several minutes.\n\nRun: ${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body,
            });

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install full requirements (may be large)
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r finbert_server/requirements.txt

      - name: Configure HF cache dir
        run: |
          mkdir -p $HOME/.cache/huggingface
          echo "TRANSFORMERS_CACHE=$HOME/.cache/huggingface" >> $GITHUB_ENV

      - name: Run integration tests
        id: run_tests
        continue-on-error: true
        env:
          TRANSFORMERS_CACHE: ${{ env.TRANSFORMERS_CACHE }}
        run: |
          pytest -q -m integration finbert_server/tests -k integration

      - name: Post completion comment (PR only)
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            if (!pr) return;
            const outcome = steps.run_tests.outcome || 'unknown';
            const success = outcome === 'success';
            const body = success
              ? `‚úÖ Integration tests completed successfully.\n\nRun: ${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
              : `‚ùå Integration tests finished with status: ${outcome}.\n\nLogs: ${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body,
            });
